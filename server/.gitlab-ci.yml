stages:
  - Build
  - Package


before_script:
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)
  - export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
  - >
    if [ -z "$CROSS_CLOUD_YML" ] && [ -z "$DASHBOARD_API_HOST_PORT" ]; then
       export CROSS_CLOUD_YML="https://raw.githubusercontent.com/CrossCloudCI/cncf-configuration/master/cross-cloud.yml"
       export DASHBOARD_API_HOST_PORT="devapi.cncf.ci"
    fi
  - source /opt/local/etc/rvmrc ; source /opt/local/etc/profile.d/rvm.sh ; rvm use ruby-2.6.3 ; cp -a /opt/local/dashboard /dashboard ; pushd /dashboard ; source /opt/local/.env ; ./bin/update_dashboard ; popd

compile:
  image: crosscloudci/debian-go-node-docker:1.16.3-node
  stage: Build
  script:
    - sed -i -e '/ darwin/ s/^/#/' .promu.yml
    - sed -i -e '/ windows/ s/^/#/' .promu.yml
    - sed -i -e '/ freebsd/ s/^/#/' .promu.yml
    - sed -i -e '/ openbsd/ s/^/#/' .promu.yml
    - sed -i -e '/ netbsd/ s/^/#/' .promu.yml
    - sed -i -e '/ dragonfly/ s/^/#/' .promu.yml
    - sed -i -e '/ illumos/ s/^/#/' .promu.yml
    - >
      if [ "$ARCH" == "arm64" ]; then
        echo 'ARCH set to arm64'
        sed -i -e 's|linux|linux\/arm64|' .promu.yml
      else
        echo 'ARCH to amd64 (Intel)'
        sed -i -e 's|linux|linux\/amd64|' .promu.yml
      fi
    - sleep 1000000
    - make promu
    - promu crossbuild -v
    - >
      if [ "$ARCH" == "amd64" ]; then
        echo 'ARCH set to amd64 (Intel)'
        # make test || true
      fi


  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks


container:
  stage: Package
  image: crosscloudci/debian-go-node-docker:1.16.3-node
  script:
    - IMAGE_TAG=${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHA_SHORT}.${CI_JOB_ID}.${ARCH}
    - make -j $(getconf _NPROCESSORS_ONLN) npm_licenses
    - make -j $(getconf _NPROCESSORS_ONLN) docker DOCKER_REPO="$CI_REGISTRY" DOCKER_IMAGE_NAME="$CI_PROJECT_NAME/$CI_PROJECT_NAME" DOCKER_IMAGE_TAG="$IMAGE_TAG" DOCKER_ARCHS="$ARCH"
    - docker tag $CI_REGISTRY_IMAGE-linux-$ARCH:$IMAGE_TAG $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - echo export IMAGE_ARGS=\"--set server.image.repository=$CI_REGISTRY_IMAGE\" | tee release.env
    - echo export TAG_ARGS=\"--set server.image.tag=$IMAGE_TAG\" | tee -a release.env
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - cat release.env
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
    paths:
      - release.env
